---
title: "cov_figures"
format: html
editor: visual
---

## CoV

```{r}
library(data.table)
library(dplyr)
library(magrittr)
library(scales)
library(ggplot2)
library(here)
library(stringr)

library(ggplot2)
library(dplyr)
library(RColorBrewer)
library(ggpubr)

devtools::load_all()
theme_set(theme_classic(base_family = "Helvetica"))
```

```{r}
min_ageI <- 25
cov_function <- function(x) { sqrt(var(x, na.rm = TRUE)) / mean(x, na.rm = TRUE) }
```

```{r}
summaryDir <- here("data/17_summary")
file_list <- list.files(summaryDir)
file_list <- file_list[grepl("nation", file_list)]
file_list <- file_list[grepl("attr_bur", file_list)]
file_list <- file.path(summaryDir, file_list)

attr_burden <- lapply(file_list, fread) %>% rbindlist(use.names = T, fill = TRUE)
attr_burden <- attr_burden %>% filter(min_age == min_ageI)
```

```{r}
# Filter and prepare data
attr_burden <- attr_burden %>%
  filter(Gender.Code == "All genders" & measure1 == "Deaths" &
    attr == "attributable" &
    source == "National Vital Statistics System" & scenario == "real" &
    agr_by == "nation" & method == "di_gee" & measure2 == "age-adjusted rate per 100,000" & min_age == min_ageI &
    measure3 == "value")
#attr_burden <- attr_burden %>% select(-"...1")
```

```{r}
attr_burd_filtered_dfs <- generate_filtered_dfs(attr_burden)
```

## rename stuff

```{r}
attr_burd_filtered_dfs <- lapply(attr_burd_filtered_dfs, function(attr_burd_filtered_dfs_i) {
  attr_burd_filtered_dfs_i %>%
    rename(
      SVI = svi_bin,
      SES = svi_bin1,
      HCD = svi_bin2,
      MS = svi_bin3,
      HT = svi_bin4,
      Rurality = rural_urban_class
    )
})
```

```{r}
findreplace <- tribble(
  ~to, ~from,
  "SES", "svi_bin1",
  "HCD", "svi_bin2",
  "MS", "svi_bin3",
  "HT", "svi_bin4",
  "SVI", "svi_bin",
  "Rurality", "rural_urban_class",
  "SES", "Socioeconomic Status",
  "HCD", "Household Characteristics",
  "MS", "Minority Status",
  "HT", "Housing Type & Transportation",
  "All", "All"
)
findreplace <- findreplace %>%
  mutate(replacecolumns = to)

findreplace <- rbind(findreplace,
                     findreplace %>%
                       mutate(to = paste("High", to),
                              from = paste("High", from)),
                     findreplace %>%
                       mutate(to = paste("Middle", to),
                              from = paste("Middle", from)),
                     findreplace %>%
                       mutate(to = paste("Low", to),
                              from = paste("Low", from)),
                     findreplace %>%
                       mutate(to = "All",
                              from = "All"))
findreplace <- distinct(findreplace)

names(attr_burd_filtered_dfs) <- replaceOrRename(names(attr_burd_filtered_dfs), findreplace)


attr_burd_filtered_dfs <- lapply(attr_burd_filtered_dfs,
                                 function(attr_burd_filtered_dfs_i){
                                   replace_values(attr_burd_filtered_dfs_i, findreplace = findreplace)
                                 })
```

```{r}
attr_burd_filtered_dfs_names <- names(attr_burd_filtered_dfs)
attr_burd_filtered_dfs_names_star <- attr_burd_filtered_dfs_names[grep("\\*", attr_burd_filtered_dfs_names)]
```

## 1

```{r}
attr_burd_filtered_dfs_star <- attr_burd_filtered_dfs[attr_burd_filtered_dfs_names_star]
```

```{r}
attr_burd_filtered_dfs_star_sum <- lapply(seq_along(attr_burd_filtered_dfs_names_star), function(i) {
  attr_burd_prop_filtered_dfs_names_i <- attr_burd_filtered_dfs_names_star[i]
  attr_burd_filtered_dfs_i <- attr_burd_filtered_dfs_star[[i]]

  split_color_var <- strsplit(attr_burd_prop_filtered_dfs_names_i, "\\*")
  split_color_var <- unlist(split_color_var)

  color.column <- split_color_var[[1]]
  split.column <- split_color_var[[2]]

  attr_burd_filtered_dfs_i %>%
    group_by(across(c(split.column, "Year"))) %>%
    mutate(n = n()) %>%
    ungroup() %>%
    group_by(across(c(split.column, "Year", "n"))) %>%
    summarise(
    CoV = sqrt(var(mean)) / mean(mean),
    bootstrap_results = list(parametric_bootstrap_stat(cur_data(), stat_function = cov_function))
    ) %>%
    unnest_wider(bootstrap_results)
    #summarise(
    #  CoV = sqrt(var(mean, na.rm = TRUE)) / mean(mean, na.rm = TRUE)#,
      #max_abs_diff = max(mean, na.rm = TRUE) - min(mean, na.rm = TRUE),
      #rel_diff = max(mean, na.rm = TRUE) / min(mean, na.rm = TRUE),
      #average = mean(mean, na.rm = TRUE),
      #over = list(unique(.data[[color.column]][mean >= average]))
    #)
})
names(attr_burd_filtered_dfs_star_sum) <- names(attr_burd_filtered_dfs_star)
```

### Ethnicity

```{r}
attr_burd_filtered_dfs_names_star_ethn <- attr_burd_filtered_dfs_names_star[grep("Ethnicity", names(attr_burd_filtered_dfs_star_sum))]
attr_burd_filtered_dfs_names_star_ethn <- attr_burd_filtered_dfs_names_star_ethn[-grep("MS", names(attr_burd_filtered_dfs_star_sum))]

attr_burd_filtered_dfs_star_sum_ethn_plots <- lapply(seq_along(attr_burd_filtered_dfs_names_star_ethn), function(i) {
  attr_burd_filtered_dfs_names_star_ethn_i <- attr_burd_filtered_dfs_names_star_ethn[i]
  attr_burd_filtered_dfs_i <- attr_burd_filtered_dfs_star_sum[[attr_burd_filtered_dfs_names_star_ethn_i]]

  split_color_var <- strsplit(attr_burd_filtered_dfs_names_star_ethn_i, "\\*")
  split_color_var <- unlist(split_color_var)

  color.column <- split_color_var[[1]]
  split.column <- split_color_var[[2]]

  attr_burd_filtered_dfs_i %>%
    ggplot(aes(x = Year, y = CoV, color = .data[[split.column]])) +
    geom_line(linewidth = 1.5) +
    geom_ribbon(aes(ymin = lower, ymax = upper), linetype = 2, alpha = 0, show.legend = FALSE) +
    xlab("Year") +
    ylim(0, NA) +
    theme(legend.position = "bottom") +
    guides(color = guide_legend(nrow = 3, byrow = TRUE))
})

attr_burd_filtered_dfs_star_sum_ethn_plots <- update_ylim(attr_burd_filtered_dfs_star_sum_ethn_plots, column = "CoV")

combined_plot <- ggpubr::ggarrange(plotlist = attr_burd_filtered_dfs_star_sum_ethn_plots)
combined_plot
```

```{r}
ggsave(
  filename = here(paste0("data/18_figures/di_gee-real-",min_ageI,"/figure_cov_ethnicity.png")),
  combined_plot
)
```

### Education

```{r}
attr_burd_filtered_dfs_names_star_educ <- attr_burd_filtered_dfs_names_star[grep("Education", names(attr_burd_filtered_dfs_star_sum))]

attr_burd_filtered_dfs_star_sum_ethn_plots <- lapply(seq_along(attr_burd_filtered_dfs_names_star_educ), function(i) {
  attr_burd_filtered_dfs_names_star_educ_i <- attr_burd_filtered_dfs_names_star_educ[i]
  attr_burd_filtered_dfs_i <- attr_burd_filtered_dfs_star_sum[[attr_burd_filtered_dfs_names_star_educ_i]]

  split_color_var <- strsplit(attr_burd_filtered_dfs_names_star_educ_i, "\\*")
  split_color_var <- unlist(split_color_var)

  color.column <- split_color_var[[1]]
  split.column <- split_color_var[[2]]

  attr_burd_filtered_dfs_i %>%
    ggplot(aes(x = Year, y = CoV, color = .data[[split.column]])) +
    geom_line(linewidth = 1.5) +
    geom_ribbon(aes(ymin = lower, ymax = upper), linetype = 2, alpha = 0, show.legend = FALSE) +
    xlab("Year") +
    ylim(0, NA) +
    theme(legend.position = "bottom") +
    guides(color = guide_legend(nrow = 3, byrow = TRUE)) # , title = color.column
})
attr_burd_filtered_dfs_star_sum_ethn_plots <- update_ylim(attr_burd_filtered_dfs_star_sum_ethn_plots, column = "CoV")

combined_plot <- ggpubr::ggarrange(plotlist = attr_burd_filtered_dfs_star_sum_ethn_plots)
combined_plot
```

```{r}
ggsave(
  filename = here(paste0("data/18_figures/di_gee-real-",min_ageI,"/figure_cov_education.png")),
  combined_plot
)
```

## 2


```{r}
attr_burd_filtered_df_year <- lapply(attr_burd_filtered_dfs, function(attr_burd_filtered_dfs_i) {
  attr_burd_filtered_dfs_i <- attr_burd_filtered_dfs_i %>%
    filter(!is.na(mean)) %>%
    filter(!is.na(lower)) %>%
    filter(!is.na(upper)) %>%
    group_by(Year) %>%
    summarise(
      n = n(),
      CoV = sqrt(var(mean)) / mean(mean), 
      bootstrap_results = list(parametric_bootstrap_stat(cur_data(), stat_function = cov_function)),
      .groups = "drop"
    ) %>%
   unnest_wider(bootstrap_results)

})
```

```{r}
attr_burd_filtered_df_year <- lapply(names(attr_burd_filtered_df_year), function(name) {
  # Use dplyr's mutate to add a new column with the name of the list element
  attr_burd_subsets_i <- attr_burd_filtered_df_year[[name]]
  attr_burd_subsets_i <- dplyr::mutate(attr_burd_subsets_i, "cat" := name)
  return(attr_burd_subsets_i)
})
attr_burd_filtered_df_year <- rbindlist(attr_burd_filtered_df_year)
```

```{r}

```

```{r}
attr_burd_filtered_df_year <- attr_burd_filtered_df_year %>%
  mutate(new_factor = factor(
    case_when(
      str_detect(cat, "Ethnicity") ~ "Ethnicity",
      str_detect(cat, "Education") ~ "Education",
      TRUE ~ "Other"
    ),
    levels = c("Ethnicity", "Education", "Other")
  ))
```

```{r}
g <- ggplot(attr_burd_filtered_df_year, aes(x = Year, y = CoV, color = cat))
g <- g +
  geom_line(linewidth = 1.5) +
  geom_ribbon(aes(ymin = lower, ymax = upper), linetype = 2, alpha = 0, show.legend = FALSE) +
  xlab("Year") +
  guides(color = guide_legend(ncol = 3, byrow = TRUE)) +
  theme(legend.title = element_blank()) +
  ylim(0, NA) +
  ylab("Coefficient of Variation (CoV)") +
  theme(legend.position = "bottom") +
  theme(text = element_text(size = 14.5)) +
  facet_wrap(vars(new_factor))
g
```

```{r}
ggsave(
  filename = here(paste0("data/18_figures/di_gee-real-",min_ageI,"/figureS8.png")),
  combined_plot, height = 6, width = 8
)
```

```{r}
attr_burd_filtered_df_year <- attr_burd_filtered_df_year %>%
  filter(cat != "All")
# Split the data frame by 'new_factor'
list_of_dfs <- split(attr_burd_filtered_df_year, attr_burd_filtered_df_year$new_factor)

# Create a list to hold ggplot objects
list_of_plots <- list()

# Get a list of all available Brewer palettes
all_palettes <- rownames(brewer.pal.info)

# Automatically generate a list of color palettes
num_palettes <- length(list_of_dfs)
color_palettes <- lapply(1:num_palettes, function(i) {
  brewer.pal(min(8, max(table(attr_burd_filtered_df_year$cat))), all_palettes[i])
})

max_y_lim <- max(attr_burd_filtered_df_year$CoV)

# Loop through the list of data frames to create individual ggplots
for(i in seq_along(list_of_dfs)) {
  factor_level <- names(list_of_dfs)[i]
  g <- ggplot(list_of_dfs[[i]], aes(x = Year, y = CoV, color = cat)) +
    geom_line(linewidth = 1.5) +
    #geom_ribbon(aes(ymin = lower, ymax = upper), linetype = 2, alpha = 0, show.legend = FALSE) +
    xlab("Year") +
    guides(color = guide_legend(ncol = 1, byrow = TRUE)) +
    theme(legend.title = element_blank()) +
    ylab("")+
    ylim(0, max_y_lim) +
    theme(legend.position = "bottom") +
    theme(text = element_text(size = 14.5)) +
    scale_color_manual(values = color_palettes[[i]]) +
    xlim(1990, 2016)
  
  list_of_plots[[i]] <- g
}
list_of_plots[[1]] <- list_of_plots[[1]] + ylab("Coefficient of Variation (CoV)") 

# Combine the individual ggplots into one plot using ggarrange
combined_plot <- do.call(ggarrange, c(list_of_plots, ncol = num_palettes))
print(combined_plot)
```

```{r}
ggsave(
  filename = here(paste0("data/18_figures/di_gee-real-",min_ageI,"/figureS8.png")),
  combined_plot, height = 6, width = 8
)
```
