---
title: "absolute_number_deaths"
format: html
editor: visual
---

## Quarto

```{r}
suppressMessages({
  library(dplyr)
  library(magrittr)
  library(data.table)
  # 
  library(tictoc)
})

library(dplyr)
library(readr)
devtools::load_all("..")
```

```{r}
totalBurdenRateDir <- "../data/13_total_burden_rate"
```

```{r}
 dataDir <- "data"
  agr_by <- "nation"
  year <- 2005
```

```{r}

pop.summary.dir <- "data/12_population_summary"

summaryHigherTotalDir <- "data/16_sum_higher_geog_level_total"
# should have #min_age = min_age.x, max_age = min_age.x, for age specific
# in l184 in 21_calc_attr_burd_di.R

# TODO
summaryHigherTotalDir <- file.path(summaryHigherTotalDir, agr_by)
dir.create(summaryHigherTotalDir, recursive = T, showWarnings = F)
summaryHigherTotalDir <- file.path(summaryHigherTotalDir, paste0("total_burden_age_adjusted_", year, ".csv"))

if (file.exists(summaryHigherTotalDir)) {
  quit()
}
## --- read attr burden----
totalBurdenRateDir <- "../data/13_total_burden_rate"
totalBurdenRateDir <- file.path(totalBurdenRateDir, "county")
files <- list.files(file.path(totalBurdenRateDir, "nvss"))
year <- "2005"
files <- files[grepl(year, files)]

total_burden <- lapply(files, function(file) {
  total_burden_i <- read_data(file.path(totalBurdenRateDir, "nvss", file))
}) %>% rbindlist(use.names = TRUE, fill = TRUE)

total_burden <- total_burden %>%
  filter(attr == "overall")


## ----group out counties---
  total_burden <- total_burden %>%
    mutate(
      nation = "us"
    )
  group_variables <- setdiff(colnames(total_burden), c("value", "county"))
  

tic(paste("summed up county level estimates to ", agr_by, "in year ", year))
total_burden <- total_burden %>%
  group_by_at(vars(all_of(c(group_variables)))) %>%
  summarise(
    value = sum(value)
  ) %>%
  ungroup()

toc()

#------ age-standartised rates-------
total_burden_absolute_number <- total_burden %>%
  filter(measure1 == "Deaths" &
    measure2 == "absolute number")
```

```{r}
total_burden_absolute_number <- total_burden_absolute_number %>%
  filter(Gender.Code == "A"  ) %>% filter(Education == 666 & Race == "All" & label_cause == "all-cause" ) #& rural_urban_class == "666" & svi_bin == "666" 

sum(total_burden_absolute_number$value)
```

```{r}
pop_summary <- get_population_data(agr_by, year, pop.summary.dir = "../data/12_population_summary") %>%
  select(-c(rural_urban_class))

total_burden_absolute_number <- total_burden_absolute_number %>% 
   select(-c(rural_urban_class, svi_bin))
total_burden_age_adj <- add_age_adjusted_rate(total_burden_absolute_number, pop_summary, path_to_standartpopulation = "../data/standartpopulation.xlsx")
total_burden_age_adj
```

```{r}
sum(total_burden_age_adj$value)
```

## from old code

```{r}
agr_by <- "nation"
year <- 2002
totalBurdenParsedDir <- "../data/09_total_burden_parsed/"
pop.summary.dir = "../data/12_population_summary"
#read_csv("data/09_total_burden_parsed/nation/nvss/total_burden_nvss_1996.csv")
## ----calculations----
#if (!file.exists(totalBurdenParsed2Dir)) {
  ##---read total burden parsed data----
    total_burden <- file.path(totalBurdenParsedDir, agr_by, "nvss", paste0("total_burden_nvss_", year, ".csv")) %>%
      read.csv()
  #}
  total_burden <- total_burden %>%
    filter(rural_urban_class != "Unknown") %>%
    mutate_at(c("rural_urban_class", "Education"), as.factor)

  if (agr_by == "nation") {
    total_burden <- total_burden %>%
      complete(Year, nation, source, nesting(Gender.Code, Race, min_age, max_age, Hispanic.Origin, Education), rural_urban_class, nesting(label_cause, attr),
        fill = list(Deaths = 0)
      ) %>%
      mutate_at(c("nation"), as.factor)
  } else if (agr_by == "STATEFP") {
    total_burden <- total_burden %>%
      #complete(Year, STATEFP, source, nesting(Gender.Code, Race, min_age, max_age, Hispanic.Origin, Education), rural_urban_class, nesting(label_cause, attr),
      #  fill = list(Deaths = 0)
      #) %>%
      filter(STATEFP != "oth") %>%
      mutate_at(c("STATEFP"), as.factor)
  }else if(agr_by == "county"){
    total_burden <- total_burden %>%
      filter(county != "oth") %>%
      mutate_at(c("county"), as.factor)

    #total_burden <- total_burden %>% filter(label_cause == "all-cause" & rural_urban_class == "666")
  }

  #---read population data----
  if(file.exists(file.path(pop.summary.dir, paste0("pop_", agr_by, ".csv"))) & agr_by != "county"){
    pop_summary1 <- file.path(pop.summary.dir, paste0("pop_", agr_by, ".csv")) %>%
      read.csv() %>%
      filter(Year == year)
  }else{
    pop_summary1 <- NULL
  }

  pop_summary2 <- file.path(pop.summary.dir, agr_by, paste0("pop_sum_", year, ".csv")) %>%
    read.csv() %>%
    filter(Year == year)

  if(agr_by != "county"){
    pop_summary2 <- pop_summary2 %>% filter(!(rural_urban_class == 666 & Education == 666))
  }

  if(agr_by == "nation"){
    pop_summary3 <- file.path(pop.summary.dir, paste0("pop_race_educ_nation.csv")) %>%
      read.csv() %>%
      filter(Year == year)
  }else{
    pop_summary3 <- NULL
  }

  pop_summary <- rbind(pop_summary1, pop_summary2, pop_summary3) %>% distinct

  pop_summary <- pop_summary %>%
    mutate_at(c("rural_urban_class", "Education"), as.factor) %>%
    mutate(source2 = NULL)

  rm(pop_summary1, pop_summary2)

  if (agr_by == "nation") {
    pop_summary <- pop_summary %>%
      complete(Year, nation, nesting(Gender.Code, Race, min_age, max_age, Hispanic.Origin, Education), rural_urban_class,
               fill = list(Population = 0)
      )%>%
      mutate_at(c("nation"), as.factor)
  } else if (agr_by == "STATEFP") {
    pop_summary <- pop_summary %>%
      complete(Year, STATEFP, nesting(Gender.Code, Race, min_age, max_age, Hispanic.Origin, Education), rural_urban_class,
               fill = list(Population = 0)
      )%>%
      mutate_at(c("STATEFP"), as.factor)
  }else if (agr_by == "county") {
    pop_summary <- pop_summary %>%
      #complete(Year, county, nesting(Gender.Code, Race, min_age, max_age, Hispanic.Origin, Education), rural_urban_class,
      #         fill = list(Population = 0)
      #)%>%
      mutate_at(c("county"), as.factor)

    #pop_summary <- pop_summary %>% filter(Race != "All")
  }
  ## --- measure 1: Deaths and YLL-----
  tic(paste("added YLL and age-adjusted rate to total burden in", year, agr_by))
  # Deaths
  total_burden$measure1 <- "Deaths"
   <- total_burden %>% dplyr::rename(value = Deaths)

  # YLL
  lifeExpectancy <- read.csv(file.path("../data", "IHME_GBD_2019_TMRLT_Y2021M01D05.csv"))
  total_burden_yll <- total_burden %>%
    dplyr::mutate(
      Life.Expectancy = lifeExpectancy$Life.Expectancy[findInterval(max_age, lifeExpectancy$Age)], # TODO max_age?
      value = value * Life.Expectancy,
      measure1 = "YLL",
      Life.Expectancy = NULL
    )

  total_burden <- rbind(total_burden, total_burden_yll)
  rm(lifeExpectancy, total_burden_yll)

  #------measure 2: absolute number, crude rate and age-standartised rates-----
  # absolute number
  total_burden$measure2 <- "absolute number"

  # crude rate
  pop_summary_agr <- pop_summary %>%
    group_by_at(vars(all_of(setdiff(colnames(pop_summary), c("min_age", "max_age", "source2", "Population"))))) %>%
    summarise(Population = sum(Population))

  total_burden_crude <- total_burden %>%
    inner_join(pop_summary_agr, by = setdiff(colnames(pop_summary_agr), "Population")) %>%
    filter(Population > 0) %>% # TODO
    mutate(
      value =  100000* (value / Population), #0/0 = NaN
      value = ifelse(is.nan(value), 0, value), #
      measure2 = "crude rate",
      Population = NULL
    )
  total_burden_crude <- total_burden_crude %>% filter(!is.na(value)) # TODO
  rm(pop_summary_agr)

  # age-standartised rates
  # see https://www.cdc.gov/nchs/data/nvsr/nvsr57/nvsr57_14.pdf, page 125 for more information, Table VIII
  standartpopulation <- read_excel(file.path("../data", "standartpopulation.xlsx"))
  full_stand_popsize <- sum(standartpopulation$standard_popsize)

  total_burden_age_adj <- crossing(pop_summary, standartpopulation)
  total_burden_age_adj <- total_burden_age_adj %>%
    mutate(
        largerInterval = case_when(
        min_age <= standard_min_age & standard_max_age <= max_age ~ 1,
        standard_min_age <= min_age & max_age <= standard_max_age ~ 2
      ),
      min_age = pmin(min_age, standard_min_age), max_age = pmax(max_age, standard_max_age),
      standard_min_age = NULL, standard_max_age = NULL
    )

  total_burden_age_adj1 <- total_burden_age_adj %>%
    filter(largerInterval == 1) %>%
    group_by_at(vars(all_of(setdiff(colnames(total_burden_age_adj), "standard_popsize")))) %>%
    summarise(standard_popsize = sum(standard_popsize))

  total_burden_age_adj2 <- total_burden_age_adj %>%
    filter(largerInterval == 2) %>%
    group_by_at(vars(all_of(setdiff(colnames(total_burden_age_adj), "Population")))) %>%
    summarise(Population = sum(Population))

  total_burden_age_adj <- rbind(total_burden_age_adj1, total_burden_age_adj2) %>%
    distinct() %>%
    ungroup()
  total_burden_age_adj$largerInterval <- NULL
  rm(total_burden_age_adj1, total_burden_age_adj2)

  # calculate age-adjusted rate
  total_burden_age_adj <- total_burden %>%
    left_join(total_burden_age_adj,
      by = setdiff(colnames(pop_summary), c("min_age", "max_age", "source2", "Population"))
    ) %>%
    filter(min_age.y <= min_age.x & max_age.x <= max_age.y) %>%
    mutate(min_age.x = NULL, max_age.x = NULL) %>%
    rename(min_age = min_age.y, max_age = max_age.y)

  total_burden_age_adj <- total_burden_age_adj %>%
    group_by_at(vars(all_of(setdiff(colnames(total_burden_age_adj), "value")))) %>%
    summarise(value = sum(value)) %>%
    ungroup()


  total_burden_age_adj <- total_burden_age_adj %>%
    filter(Population >=1 & full_stand_popsize >=1) %>%
    dplyr::mutate(
      value = (value * standard_popsize / Population) * (100000 / full_stand_popsize),
      value = ifelse(is.nan(value), 0, value),
      measure2 = "age-adjusted rate",
      Population = NULL, standard_popsize = NULL
    )


  total_burden <- rbind(total_burden, total_burden_crude, total_burden_age_adj)
  rm(total_burden_crude, total_burden_age_adj, standartpopulation, full_stand_popsize, pop_summary)

  ## ----finish------
  if(agr_by != "nation"){
    total_burden <- total_burden %>%
      filter(measure1 == "Deaths" & measure2 %in% c("absolute number", "age-adjusted rate"))
  }

  #restrict everything to age_group 25+
  total_burden <- total_burden %>%
    filter(min_age >= 25)

  total_burden <- total_burden %>% distinct()

  #fwrite(total_burden, totalBurdenParsed2Dir)
  toc()
#}
```

```{r}
total_burden %>%
  filter(measure2 == "age-adjusted rate" & measure1 == "Deaths" & rural_urban_class == "666" & label_cause == "all-cause" & rural_urban_class == "666" & Hispanic.Origin == "All Origins" &  Race == "All") %>%
  select(value) %>%
  unlist %>%
  sum()
```

## Next try

```{r}
agr_by <- "nation"
year <- 2002
totalBurdenParsedDir <- "../data/09_total_burden_parsed/"
pop.summary.dir = "../data/12_population_summary"
#read_csv("data/09_total_burden_parsed/nation/nvss/total_burden_nvss_1996.csv")
## ----calculations----
#if (!file.exists(totalBurdenParsed2Dir)) {
  ##---read total burden parsed data----
    total_burden <- file.path(totalBurdenParsedDir, agr_by, "nvss", paste0("total_burden_nvss_", year, ".csv")) %>%
      read.csv()
  #}
  total_burden <- total_burden %>%
    filter(rural_urban_class != "Unknown") %>%
    mutate_at(c("rural_urban_class", "Education"), as.factor)

  if (agr_by == "nation") {
    total_burden <- total_burden %>%
      complete(Year, nation, source, nesting(Gender.Code, Race, min_age, max_age, Hispanic.Origin, Education), rural_urban_class, nesting(label_cause, attr),
        fill = list(Deaths = 0)
      ) %>%
      mutate_at(c("nation"), as.factor)
  } else if (agr_by == "STATEFP") {
    total_burden <- total_burden %>%
      #complete(Year, STATEFP, source, nesting(Gender.Code, Race, min_age, max_age, Hispanic.Origin, Education), rural_urban_class, nesting(label_cause, attr),
      #  fill = list(Deaths = 0)
      #) %>%
      filter(STATEFP != "oth") %>%
      mutate_at(c("STATEFP"), as.factor)
  }else if(agr_by == "county"){
    total_burden <- total_burden %>%
      filter(county != "oth") %>%
      mutate_at(c("county"), as.factor)

    #total_burden <- total_burden %>% filter(label_cause == "all-cause" & rural_urban_class == "666")
  }
```

```{r}
pop_summary <- get_population_data(agr_by, year, pop.summary.dir = "../data/12_population_summary") %>%
  select(-c(rural_urban_class))

total_burden_age_adj <- add_age_adjusted_rate(total_burden %>% rename(value = Deaths), pop_summary, path_to_standartpopulation = "../data/standartpopulation.xlsx")
total_burden_age_adj
```

```{r}
total_burden_age_adj %>%
  filter(measure2 == "age-adjusted rate" & rural_urban_class == "666" & label_cause == "all-cause" & rural_urban_class == "666" & Hispanic.Origin == "All Origins" &  Race == "All") %>%
  select(value) %>%
  unlist %>% #& measure1 == "Deaths" 
  sum()
```

## Next try

```{r}
agr_by <- "nation"
year <- "2005"
totalBurdenParsedDir <- "../data/09_total_burden_parsed/"
pop.summary.dir = "../data/12_population_summary"
```

```{r}

summaryHigherTotalDir <- "data/16_sum_higher_geog_level_total"
# should have #min_age = min_age.x, max_age = min_age.x, for age specific
# in l184 in 21_calc_attr_burd_di.R

# TODO
summaryHigherTotalDir <- file.path(summaryHigherTotalDir, agr_by)
dir.create(summaryHigherTotalDir, recursive = T, showWarnings = F)
summaryHigherTotalDir <- file.path(summaryHigherTotalDir, paste0("total_burden_age_adjusted_", year, ".csv"))

if (file.exists(summaryHigherTotalDir)) {
  quit()
}
## --- read attr burden----
totalBurdenRateDir <- "../data/13_total_burden_rate"
totalBurdenRateDir <- file.path(totalBurdenRateDir, "county")
files <- list.files(file.path(totalBurdenRateDir, "nvss"))

files <- files[grepl(year, files)]

total_burden <- lapply(files, function(file) {
  total_burden_i <- read_data(file.path(totalBurdenRateDir, "nvss", file))
}) %>% rbindlist(use.names = TRUE, fill = TRUE)

total_burden <- total_burden %>%
  filter(attr == "overall")


## ----group out counties---
  total_burden <- total_burden %>%
    mutate(
      nation = "us"
    )
  group_variables <- setdiff(colnames(total_burden), c("value", "county"))
  

tic(paste("summed up county level estimates to ", agr_by, "in year ", year))
total_burden <- total_burden %>%
  group_by_at(vars(all_of(c(group_variables)))) %>%
  summarise(
    value = sum(value)
  ) %>%
  ungroup()

toc()

#------ age-standartised rates-------
total_burden_absolute_number <- total_burden %>%
  filter(measure1 == "Deaths" &
    measure2 == "absolute number")
```

```{r}
total_burden_absolute_number <- total_burden_absolute_number %>%
  group_and_sum(columns_to_sum = "value",
                columns_to_not_group = c("rural_urban_class","svi_bin")) %>%
  mutate(rural_urban_class = "666",
         svi_bin = "666")
#& rural_urban_class == "666"
```

```{r}
#read_csv("data/09_total_burden_parsed/nation/nvss/total_burden_nvss_1996.csv")
## ----calculations----
#if (!file.exists(totalBurdenParsed2Dir)) {
  ##---read total burden parsed data----
  total_burden <- total_burden_absolute_number

  #---read population data----
  if(file.exists(file.path(pop.summary.dir, paste0("pop_", agr_by, ".csv"))) & agr_by != "county"){
    pop_summary1 <- file.path(pop.summary.dir, paste0("pop_", agr_by, ".csv")) %>%
      read.csv() %>%
      filter(Year == year)
  }else{
    pop_summary1 <- NULL
  }

  pop_summary2 <- file.path(pop.summary.dir, agr_by, paste0("pop_sum_", year, ".csv")) %>%
    read.csv() %>%
    filter(Year == year)

  if(agr_by != "county"){
    pop_summary2 <- pop_summary2 %>% filter(!(rural_urban_class == 666 & Education == 666))
  }

  if(agr_by == "nation"){
    pop_summary3 <- file.path(pop.summary.dir, paste0("pop_race_educ_nation.csv")) %>%
      read.csv() %>%
      filter(Year == year)
  }else{
    pop_summary3 <- NULL
  }

  pop_summary <- rbind(pop_summary1, pop_summary2, pop_summary3) %>% distinct

  pop_summary <- pop_summary %>%
    mutate_at(c("rural_urban_class", "Education"), as.factor) %>%
    mutate(source2 = NULL)

  rm(pop_summary1, pop_summary2)

  if (agr_by == "nation") {
    pop_summary <- pop_summary %>%
      complete(Year, nation, nesting(Gender.Code, Race, min_age, max_age, Hispanic.Origin, Education), rural_urban_class,
               fill = list(Population = 0)
      )%>%
      mutate_at(c("nation"), as.factor)
  } else if (agr_by == "STATEFP") {
    pop_summary <- pop_summary %>%
      complete(Year, STATEFP, nesting(Gender.Code, Race, min_age, max_age, Hispanic.Origin, Education), rural_urban_class,
               fill = list(Population = 0)
      )%>%
      mutate_at(c("STATEFP"), as.factor)
  }else if (agr_by == "county") {
    pop_summary <- pop_summary %>%
      #complete(Year, county, nesting(Gender.Code, Race, min_age, max_age, Hispanic.Origin, Education), rural_urban_class,
      #         fill = list(Population = 0)
      #)%>%
      mutate_at(c("county"), as.factor)

    #pop_summary <- pop_summary %>% filter(Race != "All")
  }
  ## --- measure 1: Deaths and YLL-----
  tic(paste("added YLL and age-adjusted rate to total burden in", year, agr_by))
  # Deaths
  total_burden$measure1 <- "Deaths"
  #total_burden <- total_burden %>% dplyr::rename(value = Deaths)

  # YLL
  lifeExpectancy <- read.csv(file.path("../data", "IHME_GBD_2019_TMRLT_Y2021M01D05.csv"))
  total_burden_yll <- total_burden %>%
    dplyr::mutate(
      Life.Expectancy = lifeExpectancy$Life.Expectancy[findInterval(max_age, lifeExpectancy$Age)], # TODO max_age?
      value = value * Life.Expectancy,
      measure1 = "YLL",
      Life.Expectancy = NULL
    )

  total_burden <- rbind(total_burden, total_burden_yll)
  rm(lifeExpectancy, total_burden_yll)

  #------measure 2: absolute number, crude rate and age-standartised rates-----
  # absolute number
  total_burden$measure2 <- "absolute number"

  # crude rate
  pop_summary_agr <- pop_summary %>%
    group_by_at(vars(all_of(setdiff(colnames(pop_summary), c("min_age", "max_age", "source2", "Population"))))) %>%
    summarise(Population = sum(Population))

  total_burden_crude <- total_burden %>%
    inner_join(pop_summary_agr, by = setdiff(colnames(pop_summary_agr), "Population")) %>%
    filter(Population > 0) %>% # TODO
    mutate(
      value =  100000* (value / Population), #0/0 = NaN
      value = ifelse(is.nan(value), 0, value), #
      measure2 = "crude rate",
      Population = NULL
    )
  total_burden_crude <- total_burden_crude %>% filter(!is.na(value)) # TODO
  rm(pop_summary_agr)

  # age-standartised rates
  # see https://www.cdc.gov/nchs/data/nvsr/nvsr57/nvsr57_14.pdf, page 125 for more information, Table VIII
  standartpopulation <- read_excel(file.path("../data", "standartpopulation.xlsx"))
  full_stand_popsize <- sum(standartpopulation$standard_popsize)

  total_burden_age_adj <- crossing(pop_summary, standartpopulation)
  total_burden_age_adj <- total_burden_age_adj %>%
    mutate(
        largerInterval = case_when(
        min_age <= standard_min_age & standard_max_age <= max_age ~ 1,
        standard_min_age <= min_age & max_age <= standard_max_age ~ 2
      ),
      min_age = pmin(min_age, standard_min_age), max_age = pmax(max_age, standard_max_age),
      standard_min_age = NULL, standard_max_age = NULL
    )

  total_burden_age_adj1 <- total_burden_age_adj %>%
    filter(largerInterval == 1) %>%
    group_by_at(vars(all_of(setdiff(colnames(total_burden_age_adj), "standard_popsize")))) %>%
    summarise(standard_popsize = sum(standard_popsize))

  total_burden_age_adj2 <- total_burden_age_adj %>%
    filter(largerInterval == 2) %>%
    group_by_at(vars(all_of(setdiff(colnames(total_burden_age_adj), "Population")))) %>%
    summarise(Population = sum(Population))

  total_burden_age_adj <- rbind(total_burden_age_adj1, total_burden_age_adj2) %>%
    distinct() %>%
    ungroup()
  total_burden_age_adj$largerInterval <- NULL
  rm(total_burden_age_adj1, total_burden_age_adj2)

  # calculate age-adjusted rate
  total_burden_age_adj <- total_burden %>%
    left_join(total_burden_age_adj,
      by = setdiff(colnames(pop_summary), c("min_age", "max_age", "source2", "Population"))
    ) %>%
    filter(min_age.y <= min_age.x & max_age.x <= max_age.y) %>%
    mutate(min_age.x = NULL, max_age.x = NULL) %>%
    rename(min_age = min_age.y, max_age = max_age.y)

  total_burden_age_adj <- total_burden_age_adj %>%
    group_by_at(vars(all_of(setdiff(colnames(total_burden_age_adj), "value")))) %>%
    summarise(value = sum(value)) %>%
    ungroup()


  total_burden_age_adj <- total_burden_age_adj %>%
    filter(Population >=1 & full_stand_popsize >=1) %>%
    dplyr::mutate(
      value = (value * standard_popsize / Population) * (100000 / full_stand_popsize),
      value = ifelse(is.nan(value), 0, value),
      measure2 = "age-adjusted rate",
      Population = NULL, standard_popsize = NULL
    )


  total_burden <- rbind(total_burden, total_burden_crude, total_burden_age_adj)
  rm(total_burden_crude, total_burden_age_adj, standartpopulation, full_stand_popsize, pop_summary)

  ## ----finish------
  if(agr_by != "nation"){
    total_burden <- total_burden %>%
      filter(measure1 == "Deaths" & measure2 %in% c("absolute number", "age-adjusted rate"))
  }

  #restrict everything to age_group 25+
  total_burden <- total_burden %>%
    filter(min_age >= 25)

  total_burden <- total_burden %>% distinct()

  #fwrite(total_burden, totalBurdenParsed2Dir)
  toc()
#}
```

```{r}
test <- total_burden %>%
  filter(measure2 == "age-adjusted rate"& measure1 == "Deaths"  & label_cause == "all-cause"  & Hispanic.Origin == "All Origins" &  Race == "All")

test%>%
  select(value) %>% #& rural_urban_class == "666"
  unlist %>% #& measure1 == "Deaths" 
  sum()
```

## next try

```{r}
agr_by <- "nation"
year <- "2005"
totalBurdenParsedDir <- "../data/09_total_burden_parsed/"
pop.summary.dir = "../data/12_population_summary"
```

```{r}

summaryHigherTotalDir <- "data/16_sum_higher_geog_level_total"
# should have #min_age = min_age.x, max_age = min_age.x, for age specific
# in l184 in 21_calc_attr_burd_di.R

# TODO
summaryHigherTotalDir <- file.path(summaryHigherTotalDir, agr_by)
dir.create(summaryHigherTotalDir, recursive = T, showWarnings = F)
summaryHigherTotalDir <- file.path(summaryHigherTotalDir, paste0("total_burden_age_adjusted_", year, ".csv"))

if (file.exists(summaryHigherTotalDir)) {
  quit()
}
## --- read attr burden----
totalBurdenRateDir <- "../data/13_total_burden_rate"
totalBurdenRateDir <- file.path(totalBurdenRateDir, "county")
files <- list.files(file.path(totalBurdenRateDir, "nvss"))

files <- files[grepl(year, files)]

total_burden <- lapply(files, function(file) {
  total_burden_i <- read_data(file.path(totalBurdenRateDir, "nvss", file))
}) %>% rbindlist(use.names = TRUE, fill = TRUE)

total_burden <- total_burden %>%
  filter(attr == "overall")


## ----group out counties---
  total_burden <- total_burden %>%
    mutate(
      nation = "us"
    )
  group_variables <- setdiff(colnames(total_burden), c("value", "county"))
  

tic(paste("summed up county level estimates to ", agr_by, "in year ", year))
total_burden <- total_burden %>%
  group_by_at(vars(all_of(c(group_variables)))) %>%
  summarise(
    value = sum(value)
  ) %>%
  ungroup()

toc()

#------ age-standartised rates-------
total_burden_absolute_number <- total_burden %>%
  filter(measure1 == "Deaths" &
    measure2 == "absolute number")
```

```{r}
total_burden_absolute_number <- total_burden_absolute_number %>%
  group_and_sum(columns_to_sum = "value",
                columns_to_not_group = c("rural_urban_class","svi_bin")) %>%
  mutate(rural_urban_class = "666",
         svi_bin = "666")
#& rural_urban_class == "666"
```

```{r}
add_age_adjusted_rate2 <- function(total_burden, year, agr_by, pop.summary.dir = "../data/12_population_summary"){
    #---read population data----
  if(file.exists(file.path(pop.summary.dir, paste0("pop_", agr_by, ".csv"))) & agr_by != "county"){
    pop_summary1 <- file.path(pop.summary.dir, paste0("pop_", agr_by, ".csv")) %>%
      read.csv() %>%
      filter(Year == year)
  }else{
    pop_summary1 <- NULL
  }

  pop_summary2 <- file.path(pop.summary.dir, agr_by, paste0("pop_sum_", year, ".csv")) %>%
    read.csv() %>%
    filter(Year == year)

  if(agr_by != "county"){
    pop_summary2 <- pop_summary2 %>% filter(!(rural_urban_class == 666 & Education == 666))
  }

  if(agr_by == "nation"){
    pop_summary3 <- file.path(pop.summary.dir, paste0("pop_race_educ_nation.csv")) %>%
      read.csv() %>%
      filter(Year == year)
  }else{
    pop_summary3 <- NULL
  }

  pop_summary <- rbind(pop_summary1, pop_summary2, pop_summary3) %>% distinct

  pop_summary <- pop_summary %>%
    mutate_at(c("rural_urban_class", "Education"), as.factor) %>%
    mutate(source2 = NULL)

  rm(pop_summary1, pop_summary2)

  if (agr_by == "nation") {
    pop_summary <- pop_summary %>%
      complete(Year, nation, nesting(Gender.Code, Race, min_age, max_age, Hispanic.Origin, Education), rural_urban_class,
               fill = list(Population = 0)
      )%>%
      mutate_at(c("nation"), as.factor)
  } else if (agr_by == "STATEFP") {
    pop_summary <- pop_summary %>%
      complete(Year, STATEFP, nesting(Gender.Code, Race, min_age, max_age, Hispanic.Origin, Education), rural_urban_class,
               fill = list(Population = 0)
      )%>%
      mutate_at(c("STATEFP"), as.factor)
  }else if (agr_by == "county") {
    pop_summary <- pop_summary %>%
      #complete(Year, county, nesting(Gender.Code, Race, min_age, max_age, Hispanic.Origin, Education), rural_urban_class,
      #         fill = list(Population = 0)
      #)%>%
      mutate_at(c("county"), as.factor)

    #pop_summary <- pop_summary %>% filter(Race != "All")
  }
  ## --- measure 1: Deaths and YLL-----
  # Deaths
  total_burden$measure1 <- "Deaths"
  #total_burden <- total_burden %>% dplyr::rename(value = Deaths)

  # YLL
  lifeExpectancy <- read.csv(file.path("../data", "IHME_GBD_2019_TMRLT_Y2021M01D05.csv"))
  total_burden_yll <- total_burden %>%
    dplyr::mutate(
      Life.Expectancy = lifeExpectancy$Life.Expectancy[findInterval(max_age, lifeExpectancy$Age)], # TODO max_age?
      value = value * Life.Expectancy,
      measure1 = "YLL",
      Life.Expectancy = NULL
    )

  total_burden <- rbind(total_burden, total_burden_yll)
  rm(lifeExpectancy, total_burden_yll)

  #------measure 2: absolute number, crude rate and age-standartised rates-----
  # absolute number
  total_burden$measure2 <- "absolute number"

  # crude rate
  pop_summary_agr <- pop_summary %>%
    group_by_at(vars(all_of(setdiff(colnames(pop_summary), c("min_age", "max_age", "source2", "Population"))))) %>%
    summarise(Population = sum(Population))

  total_burden_crude <- total_burden %>%
    inner_join(pop_summary_agr, by = setdiff(colnames(pop_summary_agr), "Population")) %>%
    filter(Population > 0) %>% # TODO
    mutate(
      value =  100000* (value / Population), #0/0 = NaN
      value = ifelse(is.nan(value), 0, value), #
      measure2 = "crude rate",
      Population = NULL
    )
  total_burden_crude <- total_burden_crude %>% filter(!is.na(value)) # TODO
  rm(pop_summary_agr)

  # age-standartised rates
  # see https://www.cdc.gov/nchs/data/nvsr/nvsr57/nvsr57_14.pdf, page 125 for more information, Table VIII
  standartpopulation <- read_excel(file.path("../data", "standartpopulation.xlsx"))
  full_stand_popsize <- sum(standartpopulation$standard_popsize)

  total_burden_age_adj <- crossing(pop_summary, standartpopulation)
  total_burden_age_adj <- total_burden_age_adj %>%
    mutate(
        largerInterval = case_when(
        min_age <= standard_min_age & standard_max_age <= max_age ~ 1,
        standard_min_age <= min_age & max_age <= standard_max_age ~ 2
      ),
      min_age = pmin(min_age, standard_min_age), max_age = pmax(max_age, standard_max_age),
      standard_min_age = NULL, standard_max_age = NULL
    )

  total_burden_age_adj1 <- total_burden_age_adj %>%
    filter(largerInterval == 1) %>%
    group_by_at(vars(all_of(setdiff(colnames(total_burden_age_adj), "standard_popsize")))) %>%
    summarise(standard_popsize = sum(standard_popsize))

  total_burden_age_adj2 <- total_burden_age_adj %>%
    filter(largerInterval == 2) %>%
    group_by_at(vars(all_of(setdiff(colnames(total_burden_age_adj), "Population")))) %>%
    summarise(Population = sum(Population))

  total_burden_age_adj <- rbind(total_burden_age_adj1, total_burden_age_adj2) %>%
    distinct() %>%
    ungroup()
  total_burden_age_adj$largerInterval <- NULL
  rm(total_burden_age_adj1, total_burden_age_adj2)

  # calculate age-adjusted rate
  total_burden_age_adj <- total_burden %>%
    left_join(total_burden_age_adj,
      by = setdiff(colnames(pop_summary), c("min_age", "max_age", "source2", "Population"))
    ) %>%
    filter(min_age.y <= min_age.x & max_age.x <= max_age.y) %>%
    mutate(min_age.x = NULL, max_age.x = NULL) %>%
    rename(min_age = min_age.y, max_age = max_age.y)

  total_burden_age_adj <- total_burden_age_adj %>%
    group_by_at(vars(all_of(setdiff(colnames(total_burden_age_adj), "value")))) %>%
    summarise(value = sum(value)) %>%
    ungroup()


  total_burden_age_adj <- total_burden_age_adj %>%
    filter(Population >=1 & full_stand_popsize >=1) %>%
    dplyr::mutate(
      value = (value * standard_popsize / Population) * (100000 / full_stand_popsize),
      value = ifelse(is.nan(value), 0, value),
      measure2 = "age-adjusted rate",
      Population = NULL, standard_popsize = NULL
    )


  total_burden <- rbind(total_burden, total_burden_crude, total_burden_age_adj)
  rm(total_burden_crude, total_burden_age_adj, standartpopulation, full_stand_popsize, pop_summary)

  ## ----finish------
  if(agr_by != "nation"){
    total_burden <- total_burden %>%
      filter(measure1 == "Deaths" & measure2 %in% c("absolute number", "age-adjusted rate"))
  }

  #restrict everything to age_group 25+
  total_burden <- total_burden %>%
    filter(min_age >= 25)

  total_burden <- total_burden %>% distinct()

  #fwrite(total_burden, totalBurdenParsed2Dir)
  total_burden
}
```

```{r}
total_burden_adjusted <- add_age_adjusted_rate2(total_burden_absolute_number, year, agr_by, pop.summary.dir = "../data/12_population_summary")
```

```{r}

test <- total_burden_adjusted %>%
  filter(measure2 == "age-adjusted rate"& measure1 == "Deaths"  & label_cause == "all-cause"  & Hispanic.Origin == "All Origins" &  Race == "All")

test%>%
  select(value) %>% #& rural_urban_class == "666"
  unlist %>% #& measure1 == "Deaths" 
  sum()
```

## next try

```{r}
agr_by <- "nation"
year <- "2005"
totalBurdenParsedDir <- "../data/09_total_burden_parsed/"
pop.summary.dir = "../data/12_population_summary"
```

```{r}

summaryHigherTotalDir <- "data/16_sum_higher_geog_level_total"
# should have #min_age = min_age.x, max_age = min_age.x, for age specific
# in l184 in 21_calc_attr_burd_di.R

# TODO
summaryHigherTotalDir <- file.path(summaryHigherTotalDir, agr_by)
dir.create(summaryHigherTotalDir, recursive = T, showWarnings = F)
summaryHigherTotalDir <- file.path(summaryHigherTotalDir, paste0("total_burden_age_adjusted_", year, ".csv"))

if (file.exists(summaryHigherTotalDir)) {
  quit()
}
## --- read attr burden----
totalBurdenRateDir <- "../data/13_total_burden_rate"
totalBurdenRateDir <- file.path(totalBurdenRateDir, "county")
files <- list.files(file.path(totalBurdenRateDir, "nvss"))

files <- files[grepl(year, files)]

total_burden <- lapply(files, function(file) {
  total_burden_i <- read_data(file.path(totalBurdenRateDir, "nvss", file))
}) %>% rbindlist(use.names = TRUE, fill = TRUE)

total_burden <- total_burden %>%
  filter(attr == "overall")


## ----group out counties---
  total_burden <- total_burden %>%
    mutate(
      nation = "us"
    )
  group_variables <- setdiff(colnames(total_burden), c("value", "county"))
  

tic(paste("summed up county level estimates to ", agr_by, "in year ", year))
total_burden <- total_burden %>%
  group_by_at(vars(all_of(c(group_variables)))) %>%
  summarise(
    value = sum(value)
  ) %>%
  ungroup()

toc()

#------ age-standartised rates-------
total_burden_absolute_number <- total_burden %>%
  filter(measure1 == "Deaths" &
    measure2 == "absolute number")
```

```{r}
total_burden_absolute_number <- total_burden_absolute_number %>%
  group_and_sum(columns_to_sum = "value",
                columns_to_not_group = c("rural_urban_class","svi_bin")) %>%
  mutate(rural_urban_class = "666",
         svi_bin = "666")
#& rural_urban_class == "666"
```

```{r}
total_burden_adjusted <- add_age_adjusted_rate(total_burden_absolute_number, year, agr_by, pop.summary.dir = "../data/12_population_summary")
```

```{r}
test <- total_burden_adjusted %>%
  filter(measure2 == "age-adjusted rate"& measure1 == "Deaths"  & label_cause == "all-cause"  & Hispanic.Origin == "All Origins" &  Race == "All")

test%>%
  select(value) %>% #& rural_urban_class == "666"
  unlist %>% #& measure1 == "Deaths" 
  sum()
```

## next try

```{r}
test <- total_burden %>%
  filter(measure2 == "age-adjusted rate"& measure1 == "Deaths"  & label_cause == "all-cause"  & Hispanic.Origin == "All Origins" &  Race == "All" & rural_urban_class == "666" & svi_bin == "666")

test%>%
  select(value) %>% #
  unlist %>% #& measure1 == "Deaths" 
  sum()
```
